# Under which project should the actual testing be done? 
# Maybe all of them, because it depends on what branch someone is editing

name: test
#target brancvh: main, source branch: current working branch
on:
  pull_request:
    branches:
        - main

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          #checkout main branch
          ref: main

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: install dependencies
        run: npm install
      - name: install playwright
        run: npx playwright install --with-deps

      - name: run playwright tests
        run: npx nx e2e my-project-e2e
        continue-on-error: true
      - name: run tests again to generate screenshots
        run: npx nx e2e my-project-e2e
    
      - name: store reference screenshots
        run: |
            rm -rf /tmp/snapshots
            mkdir -p /tmp/snapshots
            mv apps/my-project-e2e/src/example.spec.ts-snapshots /tmp/snapshots/ || echo "No snapshot directories found"
          # rsync -a --include='*/' --include='*-snapshots' --exclude='*' . /tmp/snapshots/
        # run: |
        #     rm -rf /tmp/snapshots
        #     mkdir -p /tmp/snapshots
        #     find . -type d -name "*snapshots" | while read dir; do
        #         dest="/tmp/snapshots/$dir"
        #         mkdir -p "$(dirname "$dest")"
        #         cp -r "$dir" "$dest"
        #     done
     #add run command
    #     run: mkdir -p /tmp/snapshots
    #   - run: find . -type d -name "*-snapshots" -exec bash -c 'mkdir -p /tmp/snapshots/$(dirname {}) && cp -r {}/* /tmp/snapshots/$(dirname {})/' \;

      - name: checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
        

      - name: install dependencies on PR branch
        run: |
            git reset --hard
            rm -rf dist node-modules
            npm install
        
      - name: clean up
        run: |
            pwd
            ls -la
            cat nx.json || echo "nx.json not found"
            npx nx show projects || echo "No projects found"

    
# add run command
      - name: find screenshots folder
        run: |
          echo "Finding snapshot directories:"
          find apps/my-project-e2e/src/ -type d -name "*-snapshots" || echo "No snapshot directories found"
          mv /tmp/snapshots/* apps/my-project-e2e/src/example.spec.ts-snapshots || echo "No snapshots to move"
        # rsync -av /tmp/snapshots/ ./

        # run: |
        #   find /tmp/snapshots -type d -name "*snapshots" | while read dir; do
        #     dest="${dir#/tmp/snapshots/}"
        #     mkdir -p "$(dirname "$dest")"
        #     cp -r "$dir" "${dirname "$dest"}"
        #   done
        #run: find /tmp/snapshots -type d -name "*-snapshots" -exec bash -c 'mkdir -p $(dirname {}) && cp -r {}/* $(dirname {})/' \;
       
      - name: clean up 22222
        run: |
            pwd
            ls -la
            cat nx.json || echo "nx.json not found"
            npx nx show projects || echo "No projects found"


      - name: see where snapshot folders are
        run: |
          echo "snapshot directories:"
          find apps/my-project-e2e/src/ -type d -name "*-snapshots" || echo "No snapshot directories found"
          echo "snapshot image files:"
          find apps/my-project-e2e/src/ -type f -name "*.png" || echo "No screenshots found"

      - name: run tests on PR branch
        run: npx nx e2e my-project-e2e

    #handle pass or failure
      - name: handle results
        if: failure()
        run: |
          echo "Tests failed"
          find . -name "*-actual.png" || echo "No actual screenshots found"

